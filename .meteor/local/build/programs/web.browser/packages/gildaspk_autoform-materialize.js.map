)]}'
{"version":3,"sources":["gildaspk:autoform-materialize/materialize.html","gildaspk:autoform-materialize/materialize.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,6C;AACA,8F;AACA,kB;AACA,kC;AACA,8D;AACA,iB;AACA,wD;AACA,yD;AACA,8B;AACA,oB;AACA,gD;AACA,oF;AACA,mB;AACA,6E;AACA,+C;AACA,kD;AACA,uB;AACA,+C;AACA,6D;AACA,a;AACA,W;AACA,yB;AACA,yC;AACA,K;AACA,I;;AAEA,8C;AACA,gG;AACA,kB;AACA,yC;AACA,gF;AACA,iB;AACA,0E;AACA,iH;AACA,mE;AACA,qB;AACA,uC;AACA,4B;AACA,iD;AACA,wB;AACA,uB;AACA,yE;AACA,uD;AACA,2F;AACA,uB;AACA,wE;AACA,wD;AACA,+B;AACA,uB;AACA,oD;AACA,mD;AACA,mB;AACA,O;AACA,K;AACA,I;;AAEA,iD;AACA,sG;AACA,kB;AACA,8B;AACA,wE;AACA,4B;AACA,Q;AACA,iB;AACA,qG;AACA,iB;AACA,4C;AACA,+E;AACA,8B;AACA,U;AACA,mB;AACA,0G;AACA,mB;AACA,2D;AACA,wD;AACA,qB;AACA,iF;AACA,qB;AACA,iB;AACA,K;AACA,I;;AAEA,gD;AACA,oG;AACA,kB;AACA,mB;AACA,yB;AACA,kC;AACA,4D;AACA,qB;AACA,6B;AACA,S;AACA,K;AACA,oC;AACA,oD;AACA,iB;AACA,yD;AACA,iF;AACA,mB;AACA,oE;AACA,mB;AACA,iB;AACA,8C;AACA,uD;AACA,mB;AACA,yG;AACA,oD;AACA,iF;AACA,mB;AACA,oE;AACA,6C;AACA,uD;AACA,mB;AACA,6D;AACA,gD;AACA,qB;AACA,6E;AACA,uB;AACA,mB;AACA,qC;AACA,iF;AACA,mD;AACA,Q;AACA,iB;AACA,mC;AACA,yB;AACA,6B;AACA,kC;AACA,6D;AACA,+F;AACA,qD;AACA,W;AACA,gC;AACA,c;AACA,I;;AAEA,4C;AACA,4F;AACA,kB;AACA,gC;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,qC;AACA,wE;AACA,iB;AACA,0D;AACA,8E;AACA,mB;AACA,iB;AACA,+D;AACA,+E;AACA,qD;AACA,U;AACA,mB;AACA,c;AACA,I;;AAEA,kD;AACA,wG;AACA,kB;AACA,mB;AACA,+C;AACA,yB;AACA,2B;AACA,4C;AACA,iF;AACA,mD;AACA,Q;AACA,iB;AACA,qC;AACA,2B;AACA,0D;AACA,kD;AACA,oC;AACA,uC;AACA,iF;AACA,mD;AACA,Q;AACA,iB;AACA,qC;AACA,yB;AACA,uD;AACA,+F;AACA,qD;AACA,W;AACA,sB;AACA,kD;AACA,Y;AACA,mE;AACA,M;AACA,iB;AACA,mE;AACA,yB;AACA,I;;AAEA,iD;AACA,sG;AACA,kB;AACA,mB;AACA,yB;AACA,yB;AACA,8B;AACA,mE;AACA,6E;AACA,2D;AACA,Q;AACA,yC;AACA,+F;AACA,4D;AACA,oE;AACA,mE;AACA,Q;AACA,iB;AACA,wC;AACA,qB;AACA,uC;AACA,yC;AACA,mF;AACA,Q;AACA,4C;AACA,uF;AACA,Q;AACA,4C;AACA,uF;AACA,O;AACA,mC;AACA,gC;AACA,oC;AACA,gD;AACA,iF;AACA,2D;AACA,Q;AACA,iB;AACA,mC;AACA,gC;AACA,gC;AACA,yB;AACA,uD;AACA,+F;AACA,6D;AACA,W;AACA,iC;AACA,gD;AACA,Y;AACA,4E;AACA,oF;AACA,mF;AACA,M;AACA,iB;AACA,iF;AACA,qC;AACA,kC;AACA,uD;AACA,gB;AACA,wE;AACA,uC;AACA,qE;AACA,U;AACA,qB;AACA,sE;AACA,wD;AACA,mG;AACA,iE;AACA,yE;AACA,wE;AACA,Y;AACA,qB;AACA,yC;AACA,oC;AACA,wC;AACA,yB;AACA,6C;AACA,+C;AACA,sC;AACA,yD;AACA,qB;AACA,O;AACA,c;AACA,I;;AAEA,+C;AACA,kG;AACA,kB;AACA,iD;AACA,qB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,6B;AACA,uB;AACA,0E;AACA,K;AACA,uD;AACA,6E;AACA,mD;AACA,Q;AACA,e;AACA,I;;AAEA,oD;AACA,4G;AACA,kB;AACA,8B;AACA,2C;AACA,iB;AACA,sD;AACA,uC;AACA,oE;AACA,iB;AACA,iE;AACA,uB;AACA,yB;AACA,4E;AACA,O;AACA,mB;AACA,6D;AACA,iC;AACA,yB;AACA,gF;AACA,O;AACA,gD;AACA,0E;AACA,+B;AACA,c;AACA,I;;AAEA,0D;AACA,wH;AACA,kB;AACA,8B;AACA,gC;AACA,iB;AACA,sD;AACA,uC;AACA,oE;AACA,iB;AACA,iE;AACA,uB;AACA,yB;AACA,4E;AACA,O;AACA,mB;AACA,6D;AACA,iC;AACA,yB;AACA,gF;AACA,O;AACA,gD;AACA,0E;AACA,+B;AACA,c;AACA,I;;AAEA,4C;AACA,4F;AACA,kB;AACA,iD;AACA,kB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,6B;AACA,uB;AACA,0E;AACA,K;AACA,uD;AACA,6E;AACA,mD;AACA,Q;AACA,e;AACA,I;;AAEA,iD;AACA,sG;AACA,kB;AACA,8B;AACA,6B;AACA,iB;AACA,sD;AACA,uC;AACA,oE;AACA,iB;AACA,iE;AACA,oB;AACA,yB;AACA,4E;AACA,O;AACA,mB;AACA,6D;AACA,iC;AACA,yB;AACA,gF;AACA,O;AACA,gD;AACA,0E;AACA,+B;AACA,c;AACA,I;;AAEA,uD;AACA,kH;AACA,kB;AACA,8B;AACA,6B;AACA,iB;AACA,sD;AACA,uC;AACA,oE;AACA,iB;AACA,iE;AACA,oB;AACA,yB;AACA,4E;AACA,O;AACA,mB;AACA,6D;AACA,iC;AACA,yB;AACA,gF;AACA,O;AACA,gD;AACA,0E;AACA,+B;AACA,c;AACA,I;;AAEA,wD;AACA,oH;AACA,kB;AACA,8B;AACA,yB;AACA,qF;AACA,K;AACA,iB;AACA,sD;AACA,wB;AACA,yB;AACA,gE;AACA,K;AACA,wC;AACA,oB;AACA,wF;AACA,M;AACA,kB;AACA,kB;AACA,iB;AACA,4D;AACA,+B;AACA,uB;AACA,wF;AACA,K;AACA,gC;AACA,gF;AACA,iB;AACA,8C;AACA,kD;AACA,O;AACA,iB;AACA,mB;AACA,oC;AACA,yB;AACA,+D;AACA,K;AACA,wC;AACA,oB;AACA,uF;AACA,M;AACA,kB;AACA,iB;AACA,iB;AACA,2D;AACA,+B;AACA,uB;AACA,uF;AACA,K;AACA,gC;AACA,gF;AACA,iB;AACA,8C;AACA,kD;AACA,O;AACA,iB;AACA,kB;AACA,0B;AACA,I;;AAEA,6C;AACA,8F;AACA,kB;AACA,4C;AACA,uD;AACA,uC;AACA,oE;AACA,iB;AACA,8C;AACA,yE;AACA,mB;AACA,4C;AACA,2B;AACA,iF;AACA,S;AACA,gD;AACA,wE;AACA,qB;AACA,oE;AACA,mE;AACA,qD;AACA,8E;AACA,8B;AACA,sC;AACA,mB;AACA,gE;AACA,iE;AACA,mD;AACA,4E;AACA,wB;AACA,mB;AACA,c;AACA,I;;AAEA,oD;AACA,4G;AACA,kB;AACA,4C;AACA,uD;AACA,uC;AACA,oE;AACA,iB;AACA,4D;AACA,+D;AACA,iD;AACA,0E;AACA,oB;AACA,c;AACA,I;;AAEA,qD;AACA,8G;AACA,kB;AACA,iC;AACA,gB;AACA,iB;AACA,uD;AACA,uC;AACA,oE;AACA,iB;AACA,8C;AACA,yE;AACA,mB;AACA,4C;AACA,2B;AACA,iF;AACA,S;AACA,gD;AACA,wE;AACA,qB;AACA,sE;AACA,mE;AACA,qD;AACA,8E;AACA,8B;AACA,sC;AACA,mB;AACA,gE;AACA,iE;AACA,mD;AACA,4E;AACA,wB;AACA,mB;AACA,c;AACA,I;;AAEA,iC;AACA,sE;AACA,kB;AACA,mB;AACA,qB;AACA,2B;AACA,uB;AACA,0E;AACA,K;AACA,4C;AACA,iF;AACA,iB;AACA,8C;AACA,kD;AACA,O;AACA,iB;AACA,iB;AACA,yC;AACA,qB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,mG;AACA,gF;AACA,iB;AACA,8C;AACA,kD;AACA,O;AACA,iB;AACA,gB;AACA,yB;AACA,I;;AAEA,oC;AACA,4E;AACA,kB;AACA,gC;AACA,iB;AACA,8B;AACA,0E;AACA,M;AACA,uB;AACA,0E;AACA,M;AACA,uB;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,+C;AACA,kG;AACA,kB;AACA,8C;AACA,uD;AACA,M;AACA,uB;AACA,0E;AACA,K;AACA,M;AACA,I;;AAEA,gD;AACA,oG;AACA,kB;AACA,gC;AACA,iB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,oD;AACA,4G;AACA,kB;AACA,gC;AACA,qB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,kD;AACA,wG;AACA,kB;AACA,gC;AACA,mB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,kD;AACA,wG;AACA,kB;AACA,gC;AACA,mB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,iD;AACA,sG;AACA,kB;AACA,gC;AACA,kB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,oD;AACA,4G;AACA,kB;AACA,gC;AACA,qB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,yD;AACA,sH;AACA,kB;AACA,gC;AACA,2B;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,gD;AACA,oG;AACA,kB;AACA,gC;AACA,iB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,iD;AACA,sG;AACA,kB;AACA,gC;AACA,kB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,gD;AACA,oG;AACA,kB;AACA,gC;AACA,iB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,gD;AACA,oG;AACA,kB;AACA,gC;AACA,iB;AACA,uB;AACA,0E;AACA,K;AACA,iB;AACA,uD;AACA,M;AACA,I;;AAEA,kD;AACA,wG;A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","file":"/packages/gildaspk_autoform-materialize.js","sourcesContent":["\nTemplate.__checkName(\"autoForm_materialize\");\nTemplate[\"autoForm_materialize\"] = new Template(\"Template.autoForm_materialize\", (function() {\n  var view = this;\n  return Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"afDestroyUpdateForm\"));\n  }, function() {\n    return [ \"\\n    \", HTML.FORM(HTML.Attrs(function() {\n      return Spacebars.attrMustache(view.lookup(\"atts\"));\n    }), \"\\n      \", HTML.DIV({\n      \"class\": \"row\"\n    }, \"\\n        \", Spacebars.With(function() {\n      return Spacebars.dataMustache(view.lookup(\"innerContext\"), view.lookup(\"..\"));\n    }, function() {\n      return [ \"\\n          \", Blaze._InOuterTemplateScope(view, function() {\n        return Blaze._TemplateWith(function() {\n          return Spacebars.call(view.lookup(\".\"));\n        }, function() {\n          return Spacebars.include(function() {\n            return Spacebars.call(view.templateContentBlock);\n          });\n        });\n      }), \"\\n        \" ];\n    }), \"\\n      \"), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n\nTemplate.__checkName(\"quickForm_materialize\");\nTemplate[\"quickForm_materialize\"] = new Template(\"Template.quickForm_materialize\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"qfAutoFormContext\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"afQuickFields\")), \"\\n    \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"qfShouldRenderButton\"));\n      }, function() {\n        return [ \"\\n      \", HTML.DIV({\n          \"class\": \"col s12\"\n        }, \"\\n        \", HTML.BUTTON(HTML.Attrs({\n          type: \"submit\"\n        }, function() {\n          return Spacebars.attrMustache(view.lookup(\"submitButtonAtts\"));\n        }), \"\\n          \", Spacebars.With(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"atts\", \"buttonContent\"));\n        }, function() {\n          return [ \"\\n            \", Blaze.View(\"lookup:.\", function() {\n            return Spacebars.mustache(view.lookup(\".\"));\n          }), \"\\n          \" ];\n        }, function() {\n          return \"\\n            Submit\\n          \";\n        }), \"\\n        \"), \"\\n      \"), \"\\n    \" ];\n      }), \"\\n  \" ];\n    });\n  });\n}));\n\nTemplate.__checkName(\"afQuickField_materialize\");\nTemplate[\"afQuickField_materialize\"] = new Template(\"Template.afQuickField_materialize\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"isGroup\"), Spacebars.kw({\n      atts: view.lookup(\".\")\n    }));\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"afObjectField_materialize\")), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"isFieldArray\"), Spacebars.kw({\n        atts: view.lookup(\".\")\n      }));\n    }, function() {\n      return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"afArrayField_materialize\")), \"\\n    \" ];\n    }, function() {\n      return [ \"\\n      \", Blaze._TemplateWith(function() {\n        return Spacebars.call(view.lookup(\"groupAtts\"));\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afFormGroup_materialize\"));\n      }), \"\\n    \" ];\n    }), \"\\n  \" ];\n  });\n}));\n\nTemplate.__checkName(\"afFormGroup_materialize\");\nTemplate[\"afFormGroup_materialize\"] = new Template(\"Template.afFormGroup_materialize\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"addInputField\"));\n      }, function() {\n        return \"input-field\";\n      });\n    }\n  }, \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"skipLabel\"));\n  }, function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n      \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"labelFirst\"));\n    }, function() {\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"afLabel_materialize\")), \"\\n      \" ];\n    }), \"\\n      \", Blaze._TemplateWith(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n    }), \"\\n      \", Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"labelFirst\"));\n    }, function() {\n      return [ \"\\n        \", Blaze._TemplateWith(function() {\n        return Spacebars.call(view.lookup(\".\"));\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afLabel_materialize\"));\n      }), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      \"class\": \"red-text\"\n    }, \"\\n        \", HTML.I({\n      \"class\": \"mdi-alert-warning\"\n    }), \" \", Blaze.View(\"lookup:afFieldMessage\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")\n      })));\n    }), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afLabel_materialize\");\nTemplate[\"afLabel_materialize\"] = new Template(\"Template.afLabel_materialize\", (function() {\n  var view = this;\n  return HTML.LABEL(HTML.Attrs({\n    \"for\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"labelText\"));\n  }, function() {\n    return [ Blaze.View(\"lookup:..labelText\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"labelText\"));\n    }), \"\\n    \" ];\n  }, function() {\n    return [ Blaze.View(\"lookup:afFieldLabelText\", function() {\n      return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")\n      }));\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afObjectField_materialize\");\nTemplate[\"afObjectField_materialize\"] = new Template(\"Template.afObjectField_materialize\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"card-panel autoform-object-field\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"card-content\"\n  }, \"\\n      \", Spacebars.With(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      \"class\": \"card-title\"\n    }, \"\\n          \", Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    }), \"\\n        \"), \"\\n      \" ];\n  }), \"\\n      \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      \"class\": \"red-text\"\n    }, Blaze.View(\"lookup:afFieldMessage\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")\n      })));\n    })), \"\\n      \" ];\n  }), \"\\n      \", Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"afQuickFields\"));\n  }), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afArrayField_materialize\");\nTemplate[\"afArrayField_materialize\"] = new Template(\"Template.afArrayField_materialize\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"collection\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"collection-item\"\n  }, \"\\n      \", Blaze.View(\"lookup:afFieldLabelText\", function() {\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")\n    }));\n  }), \"\\n\\n      \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasLessThanMaximum\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\"),\n      minCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\"),\n      maxCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\")\n    }));\n  }, function() {\n    return [ \"\\n        \", HTML.BUTTON({\n      type: \"button\",\n      \"class\": \"btn autoform-add-item\",\n      \"data-autoform-field\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\"));\n      },\n      \"data-autoform-mincount\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\"));\n      },\n      \"data-autoform-maxcount\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\"));\n      }\n    }, \"\\n          Add \", HTML.I({\n      \"class\": \"mdi-content-add\"\n    }), \"\\n        \"), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")\n    }));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      \"class\": \"collection-item\"\n    }, \"\\n        \", HTML.SPAN({\n      \"class\": \"red-text\"\n    }, Blaze.View(\"lookup:afFieldMessage\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")\n      })));\n    })), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")),\n      minCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\")),\n      maxCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {\n      return [ \"\\n      \", HTML.DIV({\n        \"class\": \"collection-item\"\n      }, \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\")),\n          label: Spacebars.call(false),\n          options: Spacebars.call(view.lookup(\"afOptionsFromSchema\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n      \"), \"\\n      \", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasMoreThanMinimum\"), Spacebars.kw({\n          name: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"name\"),\n          minCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"minCount\"),\n          maxCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"maxCount\")\n        }));\n      }, function() {\n        return [ \"\\n        \", HTML.DIV({\n          \"class\": \"collection-item\"\n        }, \"\\n          \", HTML.BUTTON({\n          type: \"button\",\n          \"class\": \"btn autoform-remove-item\"\n        }, \"\\n            Remove \", HTML.SPAN({\n          \"class\": \"mdi-content-clear\"\n        }), \"\\n          \"), \"\\n        \"), \"\\n      \" ];\n      }), \"\\n    \" ];\n    });\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afCheckbox_materialize\");\nTemplate[\"afCheckbox_materialize\"] = new Template(\"Template.afCheckbox_materialize\", (function() {\n  var view = this;\n  return HTML.P(\"\\n    \", HTML.INPUT(HTML.Attrs({\n    type: \"checkbox\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  })), \"\\n    \", HTML.LABEL({\n    \"for\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));\n    }\n  }, Blaze.View(\"lookup:afFieldLabelText\", function() {\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  })), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afCheckboxGroup_materialize\");\nTemplate[\"afCheckboxGroup_materialize\"] = new Template(\"Template.afCheckboxGroup_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": \"af-checkbox-group collection\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({\n      type: \"checkbox\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));\n    })), \"\\n      \", HTML.LABEL({\n      \"for\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));\n      }\n    }, Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    })), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afCheckboxGroupInline_materialize\");\nTemplate[\"afCheckboxGroupInline_materialize\"] = new Template(\"Template.afCheckboxGroupInline_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": \"af-checkbox-group\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({\n      type: \"checkbox\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));\n    })), \"\\n      \", HTML.LABEL({\n      \"for\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));\n      }\n    }, Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    })), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afRadio_materialize\");\nTemplate[\"afRadio_materialize\"] = new Template(\"Template.afRadio_materialize\", (function() {\n  var view = this;\n  return HTML.P(\"\\n    \", HTML.INPUT(HTML.Attrs({\n    type: \"radio\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  })), \"\\n    \", HTML.LABEL({\n    \"for\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));\n    }\n  }, Blaze.View(\"lookup:afFieldLabelText\", function() {\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  })), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afRadioGroup_materialize\");\nTemplate[\"afRadioGroup_materialize\"] = new Template(\"Template.afRadioGroup_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": \"af-radio-group\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({\n      type: \"radio\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));\n    })), \"\\n      \", HTML.LABEL({\n      \"for\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));\n      }\n    }, Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    })), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afRadioGroupInline_materialize\");\nTemplate[\"afRadioGroupInline_materialize\"] = new Template(\"Template.afRadioGroupInline_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": \"af-radio-group\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({\n      type: \"radio\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));\n    })), \"\\n      \", HTML.LABEL({\n      \"for\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));\n      }\n    }, Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    })), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afBooleanRadioGroup_materialize\");\nTemplate[\"afBooleanRadioGroup_materialize\"] = new Template(\"Template.afBooleanRadioGroup_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": function() {\n      return [ \"af-radio-group \", Spacebars.mustache(view.lookup(\"rowColumnAtts\")) ];\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n    \", HTML.P({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"falseColumnAtts\"));\n    }\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({\n    id: function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_false\" ];\n    },\n    type: \"radio\",\n    value: \"false\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"falseAtts\"));\n  })), \"\\n      \", HTML.LABEL({\n    \"for\": function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_false\" ];\n    }\n  }, Spacebars.With(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"trueLabel\"));\n  }, function() {\n    return Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    });\n  }, function() {\n    return \"False\";\n  })), \"\\n    \"), \"\\n    \", HTML.P({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"trueColumnAtts\"));\n    }\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({\n    id: function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_true\" ];\n    },\n    type: \"radio\",\n    value: \"true\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"trueAtts\"));\n  })), \"\\n      \", HTML.LABEL({\n    \"for\": function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_true\" ];\n    }\n  }, Spacebars.With(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"trueLabel\"));\n  }, function() {\n    return Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    });\n  }, function() {\n    return \"True\";\n  })), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afSelect_materialize\");\nTemplate[\"afSelect_materialize\"] = new Template(\"Template.afSelect_materialize\", (function() {\n  var view = this;\n  return HTML.SELECT(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n      \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n    }, function() {\n      return [ \"\\n        \", HTML.OPTGROUP({\n        label: function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n        }\n      }, \"\\n          \", Blaze.Each(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n      }, function() {\n        return [ \"\\n          \", HTML.OPTION(HTML.Attrs(function() {\n          return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n        }), Blaze.View(\"lookup:..label\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n        })), \"\\n          \" ];\n      }), \"\\n        \"), \"\\n      \" ];\n    }, function() {\n      return [ \"\\n        \", HTML.OPTION(HTML.Attrs(function() {\n        return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n      }), Blaze.View(\"lookup:..label\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n      })), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afBooleanSelect_materialize\");\nTemplate[\"afBooleanSelect_materialize\"] = new Template(\"Template.afBooleanSelect_materialize\", (function() {\n  var view = this;\n  return HTML.SELECT(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n      \", HTML.OPTION(HTML.Attrs(function() {\n      return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n    }), Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    })), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afSelectMultiple_materialize\");\nTemplate[\"afSelectMultiple_materialize\"] = new Template(\"Template.afSelectMultiple_materialize\", (function() {\n  var view = this;\n  return HTML.SELECT(HTML.Attrs({\n    multiple: \"\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n      \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n    }, function() {\n      return [ \"\\n        \", HTML.OPTGROUP({\n        label: function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n        }\n      }, \"\\n          \", Blaze.Each(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n      }, function() {\n        return [ \"\\n            \", HTML.OPTION(HTML.Attrs(function() {\n          return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n        }), Blaze.View(\"lookup:..label\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n        })), \"\\n          \" ];\n      }), \"\\n        \"), \"\\n      \" ];\n    }, function() {\n      return [ \"\\n        \", HTML.OPTION(HTML.Attrs(function() {\n        return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n      }), Blaze.View(\"lookup:..label\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n      })), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afSwitch\");\nTemplate[\"afSwitch\"] = new Template(\"Template.afSwitch\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"switch\"\n  }, \"\\n    \", HTML.LABEL({\n    \"for\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));\n    }\n  }, \"\\n      \", Spacebars.With(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"falseLabel\"));\n  }, function() {\n    return Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    });\n  }, function() {\n    return \"Off\";\n  }), \"\\n      \", HTML.INPUT(HTML.Attrs({\n    type: \"checkbox\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  })), \"\\n      \", HTML.Raw('<span class=\"lever\"></span>'), \"\\n      \", Spacebars.With(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"trueLabel\"));\n  }, function() {\n    return Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    });\n  }, function() {\n    return \"On\";\n  }), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afPickadate\");\nTemplate[\"afPickadate\"] = new Template(\"Template.afPickadate\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"date\",\n    \"data-value\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    },\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    },\n    checked: \"checked/\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afTextarea_materialize\");\nTemplate[\"afTextarea_materialize\"] = new Template(\"Template.afTextarea_materialize\", (function() {\n  var view = this;\n  return HTML.TEXTAREA(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }, {\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }));\n}));\n\nTemplate.__checkName(\"afInputText_materialize\");\nTemplate[\"afInputText_materialize\"] = new Template(\"Template.afInputText_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputPassword_materialize\");\nTemplate[\"afInputPassword_materialize\"] = new Template(\"Template.afInputPassword_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"password\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputButton_materialize\");\nTemplate[\"afInputButton_materialize\"] = new Template(\"Template.afInputButton_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"button\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputSubmit_materialize\");\nTemplate[\"afInputSubmit_materialize\"] = new Template(\"Template.afInputSubmit_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"submit\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputReset_materialize\");\nTemplate[\"afInputReset_materialize\"] = new Template(\"Template.afInputReset_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"reset\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputDateTime_materialize\");\nTemplate[\"afInputDateTime_materialize\"] = new Template(\"Template.afInputDateTime_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"datetime\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputDateTimeLocal_materialize\");\nTemplate[\"afInputDateTimeLocal_materialize\"] = new Template(\"Template.afInputDateTimeLocal_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"datetime-local\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputDate_materialize\");\nTemplate[\"afInputDate_materialize\"] = new Template(\"Template.afInputDate_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"date\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputMonth_materialize\");\nTemplate[\"afInputMonth_materialize\"] = new Template(\"Template.afInputMonth_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"month\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputTime_materialize\");\nTemplate[\"afInputTime_materialize\"] = new Template(\"Template.afInputTime_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"time\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputWeek_materialize\");\nTemplate[\"afInputWeek_materialize\"] = new Template(\"Template.afInputWeek_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"week\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputNumber_materialize\");\nTemplate[\"afInputNumber_materialize\"] = new Template(\"Template.afInputNumber_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"number\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputRange_materialize\");\nTemplate[\"afInputRange_materialize\"] = new Template(\"Template.afInputRange_materialize\", (function() {\n  var view = this;\n  return HTML.P({\n    \"class\": \"range-field\"\n  }, \"\\n    \", HTML.INPUT(HTML.Attrs({\n    type: \"range\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));\n  })), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afInputEmail_materialize\");\nTemplate[\"afInputEmail_materialize\"] = new Template(\"Template.afInputEmail_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"email\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputUrl_materialize\");\nTemplate[\"afInputUrl_materialize\"] = new Template(\"Template.afInputUrl_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"url\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputSearch_materialize\");\nTemplate[\"afInputSearch_materialize\"] = new Template(\"Template.afInputSearch_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"search\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputTel_materialize\");\nTemplate[\"afInputTel_materialize\"] = new Template(\"Template.afInputTel_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"tel\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n\nTemplate.__checkName(\"afInputColor_materialize\");\nTemplate[\"afInputColor_materialize\"] = new Template(\"Template.afInputColor_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"color\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","###\n* Template helpers for \"materialize\" template\n###\n\nremoveClass = (atts, klass) ->\n  if typeof atts[\"class\"] == \"string\"\n    atts[\"class\"].replace klass , ''\n  atts\n\ntoggleInvalidClass = (atts) ->\n  formId = AutoForm.getFormId()\n  ss = AutoForm.getFormSchema()\n  context = ss.namedContext formId\n  isInvalid = context.keyIsInvalid atts.name\n\n  if isInvalid\n    atts = AutoForm.Utility.addClass atts, \"invalid\"\n  else\n    atts = removeClass atts, \"invalid\"\n  atts\n\n\nTemplate['quickForm_materialize'].helpers\n  submitButtonAtts: ->\n    qfAtts = @atts\n    atts = {}\n    if typeof qfAtts.buttonClasses == 'string'\n      atts['class'] = qfAtts.buttonClasses\n    else\n      atts['class'] = 'btn waves-effect waves-light'\n    atts\n\nTemplate['afFormGroup_materialize'].helpers\n  labelFirst: ->\n    labelFirstTypes = [\n      'select'\n      'boolean-select'\n      'select-multiple'\n    ]\n    type = AutoForm.getInputType(@)\n    result = _.contains(labelFirstTypes, type)\n    result\n\n  addInputField: ->\n    skipInputType = [\n      'select'\n      'select-multiple'\n      'switch'\n    ]\n    type = AutoForm.getInputType(@)\n    result = !_.contains(skipInputType, type)\n    result\n\n  skipLabel: ->\n    skipLabelTypes = [\n      'checkbox'\n      'checkbox-group'\n      'boolean-checkbox'\n      'select-radio'\n      'select-radio-group'\n      'select-radio-group-inline'\n      'boolean-radio'\n      'boolean-radio-group'\n      'toggle'\n      'switch'\n    ]\n    type = AutoForm.getInputType(@)\n    result = @skipLabel or _.contains(skipLabelTypes, type)\n    result\n\nTemplate.afLabel_materialize.helpers\n  atts: ->\n    # Use only atts beginning with label-\n    labelAtts = @afFieldLabelAtts\n\n    labelAtts\n\n_.each [\n  \"afCheckbox_materialize\"\n  \"afSelect_materialize\"\n  \"afBooleanRadioGroup_materialize\"\n  \"afBooleanSelect_materialize\"\n  \"afSelectMultiple_materialize\"\n  \"afSwitch\"\n  \"afTextarea_materialize\"\n  \"afInputText_materialize\"\n  \"afInputPassword_materialize\"\n  \"afInputButton_materialize\"\n  \"afInputSubmit_materialize\"\n  \"afInputReset_materialize\"\n  \"afInputDateTime_materialize\"\n  \"afInputDateTimeLocal_materialize\"\n  \"afInputDate_materialize\"\n  \"afInputMonth_materialize\"\n  \"afInputTime_materialize\"\n  \"afInputWeek_materialize\"\n  \"afInputNumber_materialize\"\n  \"afInputRange_materialize\"\n  \"afInputEmail_materialize\"\n  \"afInputUrl_materialize\"\n  \"afInputSearch_materialize\"\n  \"afInputTel_materialize\"\n  \"afInputColor_materialize\"\n], (tmplName) ->\n  Template[tmplName].helpers atts: ->\n    atts = _.clone(@atts)\n    atts = toggleInvalidClass atts\n    atts\n  return\n\n_.each [\n  'afInputButton_materialize'\n  'afInputSubmit_materialize'\n  'afInputReset_materialize'\n], (tmplName) ->\n  Template[tmplName].helpers atts: ->\n    atts = _.clone(@atts)\n    # Add bootstrap class\n    atts = AutoForm.Utility.addClass(atts, 'btn waves-effect waves-light')\n    atts\n  return\n\nTemplate['afTextarea_materialize'].helpers\n  atts: ->\n    atts = _.clone(@atts)\n    atts = AutoForm.Utility.addClass(atts, \"materialize-textarea\")\n    atts = toggleInvalidClass atts\n    atts\n\n_.each [\n  'afRadio_materialize'\n  'afCheckboxGroup_materialize'\n  'afRadioGroup_materialize'\n  'afCheckboxGroupInline_materialize'\n  'afRadioGroupInline_materialize'\n], (tmplName) ->\n  Template[tmplName].helpers\n    atts: ->\n      atts = _.clone(@atts)\n      atts = toggleInvalidClass atts\n      if @selected\n        atts.checked = ''\n      # remove data-schema-key attribute because we put it\n      # on the entire group\n      delete atts['data-schema-key']\n      return atts\n    dsk: ->\n      { 'data-schema-key': @atts['data-schema-key'] }\n    itemAtts: ->\n      atts = _.clone(@atts)\n      atts.id = atts.id + \"_\" + @_id\n      return atts\n  return\n\nselectHelpers = optionAtts: ->\n  item = this\n  atts = value: item.value\n  if item.selected\n    atts.selected = ''\n  atts\n\nTemplate['afSelect_materialize'].helpers selectHelpers\nTemplate['afSelectMultiple_materialize'].helpers selectHelpers\nTemplate['afBooleanSelect_materialize'].helpers selectHelpers\n\nTemplate['afBooleanRadioGroup_materialize'].helpers\n  falseAtts: ->\n    atts = _.omit(@atts, 'trueLabel', 'falseLabel', 'data-schema-key')\n    if @value == false\n      atts.checked = ''\n    atts\n  trueAtts: ->\n    atts = _.omit(@atts, 'trueLabel', 'falseLabel', 'data-schema-key')\n    if @value == true\n      atts.checked = ''\n    atts\n  dsk: ->\n    { 'data-schema-key': @atts['data-schema-key'] }\n\nTemplate['afSelectMultiple_materialize'].helpers\n  atts: ->\n    atts = _.clone(@atts)\n    atts = AutoForm.Utility.addClass atts, 'browser-default'\n    atts = toggleInvalidClass atts\n    atts\n\nTemplate.afSelect_materialize.rendered = ->\n  @$('select').material_select()\n\n  # ensure the dropdown is reset when options change\n  Tracker.autorun =>\n    options = @data?.items\n    @$('select').material_select()\n\n  return\n\nTemplate.afBooleanSelect_materialize.rendered = ->\n  @$('select').material_select()\n\n  # ensure the dropdown is reset when options change\n  Tracker.autorun =>\n    options = @data?.items\n    @$('select').material_select()\n\n  return\n\nTemplate.afFormGroup_materialize.rendered = ->\n  formId = AutoForm.getFormId()\n\n  @autorun =>\n    value = AutoForm.getFieldValue @data.name, formId\n\n    if !!value\n      @$('.input-field > label:not(:focus)').addClass 'active'\n    else\n      @$('.input-field > label:not(:focus)').removeClass 'active'\n\n  return\n\nDEFAULT_PICKADATE_FORMAT = 'yyyy/mm/dd'\nDEFAULT_PICKADATE_FORMAT_SUBMIT = 'yyyy/mm/dd'\n\nAutoForm.addInputType 'pickadate',\n  template: 'afPickadate'\n  valueIn: (val, atts) ->\n    result = val\n    # datetimepicker expects the date to represent local time,\n    # so we need to adjust it if there's a timezoneId specified\n    timezoneId = atts.timezoneId\n    if typeof timezoneId == 'string'\n      if typeof moment.tz != 'function'\n        throw new Error('If you specify a timezoneId, make sure that you\\'ve added a moment-timezone package to your app')\n      if val instanceof Date\n        result = moment(AutoForm.Utility.dateToNormalizedLocalDateAndTimeString(val, timezoneId), 'YYYY-MM-DD[T]HH:mm:ss.SSS').toDate()\n    result\n\n  valueOut: ->\n    item = this.pickadate('picker').get('select')\n    if item then result = item.obj\n    result\n  valueConverters:\n    'string': (val) ->\n      if val instanceof Date then val.toString() else val\n    'stringArray': (val) ->\n      if val instanceof Date\n        return [ val.toString() ]\n      val\n    'number': (val) ->\n      if val instanceof Date then val.getTime() else val\n    'numberArray': (val) ->\n      if val instanceof Date\n        return [ val.getTime() ]\n      val\n    'dateArray': (val) ->\n      if val instanceof Date\n        return [ val ]\n      val\n  contextAdjust: (context) ->\n    if context.atts.timezoneId\n      context.atts[\"data-timezone-id\"] = context.atts.timezoneId\n\n    delete context.atts.timezoneId\n    context\n\nTemplate['afPickadate'].rendered = ->\n  userOptions = @data.atts.pickadateOptions or {}\n  opts = _.defaults userOptions,\n    format: DEFAULT_PICKADATE_FORMAT_SUBMIT,\n    hiddenName: true\n    closeOnSelect: true\n\n  input = @$('input').pickadate opts\n  picker = input.pickadate 'picker'\n\n  @$('input').on 'change', ->\n    $(this).pickadate('picker').close()\n\n  if @data.value\n    @$('input').parent().find('label').addClass 'active'\n\n  # set and reactively update values\n  @autorun ->\n    data = Template.currentData()\n\n    if data.value instanceof Date\n      picker.set 'select', data.value\n    else\n      picker.set 'clear'\n\n    # set start date if there's a min in the schema\n    if data.min instanceof Date\n      picker.set 'min', data.min\n\n    # set end date if there's a max in the schema\n    if data.max instanceof Date\n      picker.set 'max', data.max\n\n  return\n\nTemplate.afPickadate.helpers\n  atts: ->\n    atts = _.clone @atts\n    delete atts.dateTimePickerOptions\n    delete atts.pickadateOptions\n    atts\n\nAutoForm.addInputType 'switch',\n  template: 'afSwitch'\n  valueIn: (value) ->\n    return value\n  valueOut: ->\n    input = this[0]\n    checked = input.checked\n    if checked\n      result = (input.attributes.trueValue?.value) || true\n    else\n      result = (input.attributes.falseValue?.value) || false\n\n    result\n\nTemplate.afSwitch.rendered = ->\n  input = @$('input')\n  @autorun =>\n    data = Template.currentData()\n    trueValue = (@data.atts.trueValue || true)\n    input.prop 'checked', (data.value == trueValue)\n\nTemplate.afSwitch.helpers\n  atts: ->\n    _.extend @atts, id: @atts.name\n"]}